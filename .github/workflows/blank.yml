# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
      #- "Feature*" 
    paths:
    - '**.md'
  pull_request:
    #branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
       fetch-depth: "0"
       
       
    - name: get changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"

    - name: echo output
      run: |
        echo ${{ steps.getfile.outputs.files }}
          
    - name: Dump GitHub context
      run: |
        echo '::set-env name=GetFileE::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)'
        #git diff-tree --no-commit-id --name-only -r ${{ github.sha }}
        
      
    - name: Spell Checker
      if: always()  
      uses: zwaldowski/cspell-action@1.0.0
      with:
        # Glob pattern of files to check
        paths: ${{ steps.getfile.outputs.files }}
        #paths: "./Project/test.md"
        config: .github/workflows/cspell.json
        # Configuration file to use. By default cspell looks for cspell.json in the current directory.
        #config: # optional
        # Exclude files matching the glob pattern
        #exclude: # optional
        # Only output the first instance of a word not found in the dictionaries.
        unique: "true" # optional
    
     # Runs a set of commands using the runners shell
    
   
      
      
       
        
    
        
   
    
    
      
        
       
   

   
