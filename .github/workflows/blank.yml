# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
      #- "Feature*" 
    paths:
    - '**.md'
  #pull_request:
    #branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
       fetch-depth: "0"
       
       
    - name: get changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"

    - name: echo output
      run: |
        echo ${{ steps.getfile.outputs.files }}
          
    - name: Dump GitHub context
      run: |
        echo '::set-env name=GetFileE::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)'
        #git diff-tree --no-commit-id --name-only -r ${{ github.sha }}
        
    
    - name: Markdown Linter
      if: always()  
      uses: ruzickap/action-my-markdown-linter@v0.0.1
      with:
        # markdownlint config file
        config_file: .github/workflows/markdownlint.json # optional
        # Debug mode
        #debug: # optional
        # Exclude files or directories
        #exclude: # optional
        # Command line parameters for fd command. "exclude" and "search_paths" parameters are ignored if this is set
        #fd_cmd_params: # optional
        # Set paths which should be recursively scanned for markdown files (*.md) and linted. By default all "*.md" files are checked
        search_paths: ${{ steps.getfile.outputs.files }} # optional
    
    
    - name: GitHub Pull Request Action
      if: always()  
      uses: repo-sync/pull-request@v2.3
      with:
        # Branch name to pull from, default is triggered branch
        #source_branch: '' # optional
        # Branch name to sync to in this repo, default is master
        destination_branch: 'QA' # optional, default is master
        # Pull request title
        #pr_title: # optional
        # Pull request body
        #pr_body: # optional
        # Pull request template
        #pr_template: # optional
        # Pull request reviewers, comma-separated list (no spaces)
        #pr_reviewer: 'hirenp-waferwire,jamesmrollins' # optional
        # Pull request assignees, comma-separated list (no spaces)
        #pr_assignee: # optional
        # Pull request labels, comma-separated list (no spaces)
        #pr_label: # optional
        # Pull request milestone
        #pr_milestone: # optional
        # Draft pull request
        #pr_draft: # optional
        # Create PR even if no changes
        #pr_allow_empty: # optional
        # GitHub token secret
        github_token: ${{ secrets.GITHUB_TOKEN }} #${{ secrets.TEST_TOKEN }}
    
   
      
      
       
        
    
        
   
    
    
      
        
       
   

   
